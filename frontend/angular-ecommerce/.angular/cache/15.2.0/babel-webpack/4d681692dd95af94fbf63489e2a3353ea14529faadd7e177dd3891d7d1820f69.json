{"ast":null,"code":"import { CartItem } from 'src/app/model/cart-item';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/product.service\";\nimport * as i2 from \"src/app/services/cart.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i6 from \"@angular/forms\";\nfunction ProductListComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"div\", 15)(2, \"a\", 16);\n    i0.ɵɵelement(3, \"img\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 16)(5, \"h1\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 18);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ProductListComponent_div_4_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const product_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.addToCart(product_r2));\n    });\n    i0.ɵɵtext(11, \"Add to Cart\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const product_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/products/\", product_r2.id, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", product_r2.imageUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/products/\", product_r2.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 5, product_r2.unitPrice, \"USD\"));\n  }\n}\nfunction ProductListComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" No products found. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ProductListComponent = /*#__PURE__*/(() => {\n  class ProductListComponent {\n    constructor(productService, cartService, route) {\n      this.productService = productService;\n      this.cartService = cartService;\n      this.route = route;\n      this.currentCategoryId = 1;\n      this.previousCategoryId = 1;\n      this.searchMode = false;\n      // new properties for pagination\n      this.pageNumber = 1;\n      this.pageSize = 5;\n      this.totalElements = 0;\n      this.previousKeyword = null;\n    }\n    // similar to @PostConstruct of Spring\n    ngOnInit() {\n      this.route.paramMap.subscribe(() => this.listProducts());\n    }\n    listProducts() {\n      // if url has the \"keyword\" query parameter that means it is a search mode\n      this.searchMode = this.route.snapshot.paramMap.has(\"keyword\");\n      if (this.searchMode) {\n        this.handleSearchProducts();\n      } else {\n        this.handleListProducts();\n      }\n    }\n    handleSearchProducts() {\n      const searchKeyword = this.route.snapshot.paramMap.get(\"keyword\");\n      // if we have different keyword than previous then set the pageNumber to 1\n      if (this.previousKeyword != searchKeyword) {\n        this.pageNumber = 1;\n      }\n      this.previousKeyword = searchKeyword;\n      console.log(`searchKeyword=${searchKeyword}, pageNumber=${this.pageNumber}`);\n      // now search for the products using the searchKeyword\n      this.productService.searchProductsPaginated(this.pageNumber - 1, this.pageSize, searchKeyword).subscribe(this.processResult());\n    }\n    handleListProducts() {\n      // check if \"id\" parameter is available\n      const hasCategoryId = this.route.snapshot.paramMap.has(\"id\");\n      if (hasCategoryId) {\n        // get the \"id\" param string. convert string to a number using the \"+\" symbol\n        this.currentCategoryId = +this.route.snapshot.paramMap.get(\"id\");\n      } else {\n        // no category id available .. default to category id 1\n        this.currentCategoryId = 1;\n      }\n      // check if we have a different category id than previous\n      // Note : Angular will re-use a component if it is currently being used in the browser\n      // if we have a different category id than the previous then set the pageNumber back to 1\n      if (this.previousCategoryId != this.currentCategoryId) {\n        this.pageNumber = 1;\n      }\n      this.previousCategoryId = this.currentCategoryId;\n      console.log(`currentCategoryId=${this.currentCategoryId}, pageNumber=${this.pageNumber}`);\n      // now get the products for the given category id\n      this.productService.getProductListPaginated(this.pageNumber - 1, this.pageSize, this.currentCategoryId).subscribe(this.processResult());\n    }\n    processResult() {\n      return data => {\n        this.products = data._embedded.products;\n        this.pageNumber = data.page.number + 1; // Spring Data REST: pages are 0 based - Angular: pages are 1 based\n        this.pageSize = data.page.size;\n        this.totalElements = data.page.totalElements;\n      };\n    }\n    updatePageSize(updatedPageSize) {\n      this.pageSize = updatedPageSize;\n      this.pageNumber = 1;\n      this.listProducts();\n    }\n    addToCart(product) {\n      console.log(`Adding to cart: ${product.name}, ${product.unitPrice}`);\n      // do the real work\n      const theCartItem = new CartItem(product);\n      this.cartService.addToCart(theCartItem);\n    }\n  }\n  ProductListComponent.ɵfac = function ProductListComponent_Factory(t) {\n    return new (t || ProductListComponent)(i0.ɵɵdirectiveInject(i1.ProductService), i0.ɵɵdirectiveInject(i2.CartService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n  ProductListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductListComponent,\n    selectors: [[\"app-product-list\"]],\n    decls: 27,\n    vars: 7,\n    consts: [[1, \"main-content\"], [1, \"section-content\", \"section-content-p3\"], [1, \"container-fluid\"], [1, \"row\"], [\"class\", \"col-md-3\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-warning col-md-12\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"footer-pagination\"], [1, \"col-md-6\"], [1, \"col-md-9\", 2, \"padding-left\", \"20%\"], [3, \"page\", \"pageSize\", \"collectionSize\", \"maxSize\", \"boundaryLinks\", \"pageChange\"], [1, \"col-md-3\", \"mt-2\", 2, \"text-align\", \"right\"], [1, \"mr-2\"], [3, \"change\"], [\"selected\", \"true\"], [1, \"col-md-3\"], [1, \"product-box\"], [3, \"routerLink\"], [1, \"img-responsive\", 3, \"src\"], [1, \"price\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\", \"col-md-12\"]],\n    template: function ProductListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵtemplate(4, ProductListComponent_div_4_Template, 12, 8, \"div\", 4);\n        i0.ɵɵtemplate(5, ProductListComponent_div_5_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 3);\n        i0.ɵɵelement(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 3)(11, \"div\", 8)(12, \"ngb-pagination\", 9);\n        i0.ɵɵlistener(\"pageChange\", function ProductListComponent_Template_ngb_pagination_pageChange_12_listener($event) {\n          return ctx.pageNumber = $event;\n        })(\"pageChange\", function ProductListComponent_Template_ngb_pagination_pageChange_12_listener() {\n          return ctx.listProducts();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 10)(14, \"span\", 11);\n        i0.ɵɵtext(15, \"Page Size\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 12);\n        i0.ɵɵlistener(\"change\", function ProductListComponent_Template_select_change_16_listener($event) {\n          return ctx.updatePageSize($event.target.value);\n        });\n        i0.ɵɵelementStart(17, \"option\");\n        i0.ɵɵtext(18, \"2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 13);\n        i0.ɵɵtext(20, \"5\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\");\n        i0.ɵɵtext(22, \"10\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"option\");\n        i0.ɵɵtext(24, \"20\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"option\");\n        i0.ɵɵtext(26, \"50\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.products);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.products == null ? null : ctx.products.length) == 0);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"page\", ctx.pageNumber)(\"pageSize\", ctx.pageSize)(\"collectionSize\", ctx.totalElements)(\"maxSize\", 5)(\"boundaryLinks\", true);\n      }\n    },\n    dependencies: [i3.RouterLink, i4.NgForOf, i4.NgIf, i5.NgbPagination, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i4.CurrencyPipe]\n  });\n  return ProductListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}